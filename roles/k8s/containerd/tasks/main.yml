---
- name: Install prerequisites for containerd
  ansible.builtin.package:
    name: 
    - ca-certificates
    - curl
    - gnupg
    state: present
    update_cache: yes
  become: true

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_key_module.html#ansible-collections-ansible-builtin-apt-key-module
- name: Add containerd GPG key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    file: /etc/apt/keyrings/docker.asc
    mode: '0644'
    state: present
  become: true

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html#ansible-collections-ansible-builtin-apt-repository-module
- name: Add containerd repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable
    state: present
  become: true

- name: Install containerd
  ansible.builtin.package:
    name: containerd.io
    state: present
    update_cache: yes
  become: true

- name: Create containerd configuration file
  ansible.builtin.copy:
    src: files/containerd_config.toml
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: '0644'
  become: true    

- name: Restart containerd service
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    enabled: true
  register: containerd_status
  become: true

- name: Wait for containerd to become active
  ansible.builtin.command: systemctl is-active containerd
  register: containerd_check
  retries: 5
  delay: 2
  until: containerd_check.stdout == "active"
  become: true

- name: Assert containerd is active and running
  ansible.builtin.assert:
    that:
      - containerd_check.stdout == "active"
    fail_msg: "Containerd is not running!"
    success_msg: "Containerd is active and running."